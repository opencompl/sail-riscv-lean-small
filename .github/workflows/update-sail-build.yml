name: Build RISCV For Lean

on:
  schedule:
    - cron: "42 * * * *"
  workflow_dispatch:

env:
  OPAMVERBOSE: 1
  CLEAR_GLOBS_FILE: .github/workflows/clear-globs.txt

jobs:
  build:
    strategy:
      matrix:
        version: [5.2.1]
        os: [ubuntu-latest]

    runs-on: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Checkout SAIL
      run: |
        git clone https://github.com/ineol/sail.git
        (cd sail; git checkout push-nxxnuzwvnvuy)

    - name: System dependencies (ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt update
        sudo apt install build-essential libgmp-dev z3 cvc4 opam

    - name: Restore cached opam
      id: cache-opam-restore
      uses: actions/cache/restore@v4
      with:
        path: ~/.opam
        key: ${{ matrix.os }}-${{ matrix.version }}

    - name: Setup opam
      if: steps.cache-opam-restore.outputs.cache-hit != 'true'
      run: |
        opam init --yes --no-setup --shell=sh --compiler=${{ matrix.version }}
        opam install dune

    - name: Install Sail dependences
      if: steps.cache-opam-restore.outputs.cache-hit != 'true'
      run: |
        eval $(opam env)
        (cd sail; opam install sail --deps-only --yes)

    - name: Save cached opam
      if: steps.cache-opam-restore.outputs.cache-hit != 'true'
      id: cache-opam-save
      uses: actions/cache/save@v4
      with:
        path: ~/.opam
        key: ${{ steps.cache-opam-restore.outputs.cache-primary-key }}

    - name: Install Sail
      run: |
        eval $(opam env)
        (cd sail; make install)

    - name: Build the Sail RISCV Model for Lean
      run: |
        git clone https://github.com/riscv/sail-riscv.git
        cd sail-riscv
        eval $(opam config env)
        cmake -S . -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo -DSAIL_MODULES="I;M;main;termination"
        cmake --build build/ --target generated_lean_executable_rv64d
        cd ..

    - name: Restore cached lake directory
      id: cache-lake-restore
      uses: actions/cache/restore@v4
      with:
        path: sail-riscv/build/model/Lean_RV64D_executable/.lake
        key: ${{ matrix.os }}-${{ matrix.version }}


    - name: Install elan
      run: |
        wget https://elan.lean-lang.org/elan-init.sh
        bash elan-init.sh -y

    - name: Use Lean to build the model and record errors
      run: |
        . ~/.profile
        cp README.md sail-riscv/build/model/Lean_RV64D_executable
        cp report.py sail-riscv/build/model/Lean_RV64D_executable
        cd sail-riscv/build/model/Lean_RV64D_executable
        (lake build | tee build_log.txt || true)
        sed -i '/Statistics/,$d' README.md

        ./report.py >> README.md
        cd ../../../..

    - name: Save cached lake
      id: cache-lake-save
      uses: actions/cache/save@v4
      with:
        path: sail-riscv/build/model/Lean_RV64D_executable/.lake
        key: ${{ steps.cache-lake-restore.outputs.cache-primary-key }}

    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: main
        FOLDER: sail-riscv/build/model/Lean_RV64D_executable
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TARGET_DIR: .
